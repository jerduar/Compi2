/* Generated By:JavaCC: Do not edit this line. Analizador_Lienzo.java */
package AnalizadorCC;

public class Analizador_Lienzo implements Analizador_LienzoConstants {
 public static void main(String args[]) throws ParseException {
    Analizador_Lienzo parser = new Analizador_Lienzo(new java.io.StringReader("56+9+5"));
    parser.INICIO();
    System.out.println("Exito!!");
  }

  final public nodo INICIO() throws ParseException {
                nodo e1;
    e1 = S();
    jj_consume_token(0);
        nodo n1 = new nodo();
        n1.setEtiqueta("INICIO");
        nodo ini =  (nodo) e1;
        n1.AddHijos(ini);
        {if (true) return n1;}
    throw new Error("Missing return statement in function");
  }

  final public nodo S() throws ParseException {
          nodo e1; nodo e2, retorno = new nodo(); Token tok1,tok2,tok3,tok4,tok5;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case PUBLICO:
    case PRIVADO:
    case PROTEGIDO:
      e1 = Ambito();
      tok1 = jj_consume_token(LIENZO);
      tok2 = jj_consume_token(IDENTIFICADOR);
      e2 = P();
                retorno.setEtiqueta("S");
                retorno.AddHijos(e1);
                retorno.AddHijos(tok1.image);
                retorno.AddHijos(tok2.image);
                retorno.AddHijos(e2);
                {if (true) return retorno;}
      break;
    case LIENZO:
      tok1 = jj_consume_token(LIENZO);
      tok2 = jj_consume_token(IDENTIFICADOR);
      e2 = P();
                retorno.setEtiqueta("S");
                retorno.AddHijos(tok1.image);
                retorno.AddHijos(e2);
                {if (true) return retorno;}
      break;
    default:
      jj_la1[0] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo P() throws ParseException {
            nodo nodo1,nodo2; Token tok1; Token tok2; Token tok3; nodo auxiliar;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case EXTIENDE:
      tok1 = jj_consume_token(EXTIENDE);
      auxiliar = ListaIds();
      tok2 = jj_consume_token(ABRE);
      nodo2 = ListaSentencias();
      tok3 = jj_consume_token(CIERRE);
        nodo1 = new nodo();
        nodo1.setEtiqueta("P");
        nodo1.AddHijos(tok1.image);
        nodo1.AddHijos(auxiliar);
        nodo1.AddHijos(tok2.image);
        nodo1.AddHijos(nodo2);
        nodo1.AddHijos(tok3.image);
        {if (true) return nodo1;}
      break;
    case ABRE:
      tok1 = jj_consume_token(ABRE);
      nodo2 = ListaSentencias();
      tok2 = jj_consume_token(CIERRE);
        nodo1 = new nodo();
        nodo1.setEtiqueta("P");
        nodo1.AddHijos(tok1.image);
        nodo1.AddHijos(nodo2);
        nodo1.AddHijos(tok2.image);
        {if (true) return nodo1;}
      break;
    default:
      jj_la1[1] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo ListaSentencias() throws ParseException {
                         nodo retorno = new nodo(); nodo n1,n2; retorno.setEtiqueta("ListaSentencias");
    n1 = Sentencia();
        retorno.AddHijos(n1);
    label_1:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case VAR:
      case TENTERO:
      case TCADENA:
      case TBOOLEAN:
      case TDOBLE:
      case TCARACTER:
      case CONSERVAR:
      case VOID:
      case IDENTIFICADOR:
        ;
        break;
      default:
        jj_la1[2] = jj_gen;
        break label_1;
      }
      n2 = Sentencia();
        retorno.AddHijos(n2);
    }
     {if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo Sentencia() throws ParseException {
                  nodo retorno; nodo aux = null;
    if (jj_2_1(2)) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case CONSERVAR:
        jj_consume_token(CONSERVAR);
                              aux = new nodo(); aux.setEtiqueta("CONSERVAR");
        break;
      default:
        jj_la1[3] = jj_gen;
        ;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case VAR:
        retorno = DecAsig();
        jj_consume_token(26);
    if(aux!= null)retorno.hijos.add(0,aux);
        break;
      case TENTERO:
      case TCADENA:
      case TBOOLEAN:
      case TDOBLE:
      case TCARACTER:
        retorno = Funcion();
    if(aux!=null)retorno.hijos.add(0,aux);
        break;
      case VOID:
      case IDENTIFICADOR:
        retorno = Procedimiento();
    if(aux != null)retorno.hijos.add(0,aux);
        break;
      default:
        jj_la1[4] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
        {if (true) return retorno;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case IDENTIFICADOR:
        retorno = Asig();
        jj_consume_token(26);
        {if (true) return retorno;}
        break;
      default:
        jj_la1[5] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo Dimensiones() throws ParseException {
                    nodo retorno = new nodo();nodo e1; retorno.setEtiqueta("DIMENSIONES"); Token tok, tok1;
    label_2:
    while (true) {
      jj_consume_token(27);
      e1 = EA1();
      jj_consume_token(28);
        nodo aux = new nodo();
        aux.setEtiqueta("DIM");
        aux.AddHijos("[");
        aux.AddHijos(e1);
        aux.AddHijos("]");
        retorno.AddHijos(aux);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 27:
        ;
        break;
      default:
        jj_la1[6] = jj_gen;
        break label_2;
      }
    }
     {if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo DecAsig() throws ParseException {
                  nodo retorno = new nodo(); Token tok, tok1;nodo e1,e2,e3; e3 = null;
    tok = jj_consume_token(VAR);
    e2 = Tipo();
    e1 = ListaIds();
            retorno.AddHijos(tok.image);
            retorno.AddHijos(e2);
            retorno.AddHijos(e1);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 27:
    case 29:
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 27:
        e3 = Dimensiones();
            retorno.setEtiqueta("DECA");
            retorno.AddHijos(e3);
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 29:
          jj_consume_token(29);
          jj_consume_token(30);
          e3 = ValArreglo();
          jj_consume_token(31);
            retorno.AddHijos(e3);
            retorno.setEtiqueta("DECAGASIGA");
          break;
        default:
          jj_la1[7] = jj_gen;
          ;
        }
        break;
      case 29:
        jj_consume_token(29);
        e3 = EL1();
                         retorno.AddHijos("=");retorno.AddHijos(e3);retorno.setEtiqueta("DECASIG");
        break;
      default:
        jj_la1[8] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      break;
    default:
      jj_la1[9] = jj_gen;
      ;
    }
 {if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo ValArreglo() throws ParseException {
                    nodo e1, e2,retorno;retorno = new nodo();retorno.setEtiqueta("LISTAVAL"); e2 = null;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case ENTERO:
    case DECIMAL:
    case CADENA:
    case CARACTER:
    case IDENTIFICADOR:
    case 33:
      e1 = EL1();
               retorno.AddHijos(e1);
      label_3:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 32:
          ;
          break;
        default:
          jj_la1[10] = jj_gen;
          break label_3;
        }
        jj_consume_token(32);
        e2 = EL1();
        retorno.AddHijos(e2);
      }
     {if (true) return retorno;}
      break;
    case 30:
      jj_consume_token(30);
      e1 = ValArreglo();
      jj_consume_token(31);
      label_4:
      while (true) {
        jj_consume_token(32);
        jj_consume_token(30);
        e2 = ValArreglo();
        jj_consume_token(31);
            nodo ret = new nodo();
            ret.setEtiqueta("VALORARREGLO");
            ret.AddHijos(e1);
            ret.AddHijos(e2);
            e1 = (nodo)ret;
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 32:
          ;
          break;
        default:
          jj_la1[11] = jj_gen;
          break label_4;
        }
      }
     {if (true) return e1;}
      break;
    default:
      jj_la1[12] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo Tipo() throws ParseException {
               nodo retorno = new nodo(); retorno.setEtiqueta("TIPO"); Token tok;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TENTERO:
      tok = jj_consume_token(TENTERO);
        retorno.setValor(tok.image);
        {if (true) return retorno;}
      break;
    case TCADENA:
      tok = jj_consume_token(TCADENA);
        retorno.setValor(tok.image);
        {if (true) return retorno;}
      break;
    case TBOOLEAN:
      tok = jj_consume_token(TBOOLEAN);
        retorno.setValor(tok.image);
        {if (true) return retorno;}
      break;
    case TDOBLE:
      tok = jj_consume_token(TDOBLE);
        retorno.setValor(tok.image);
        {if (true) return retorno;}
      break;
    case TCARACTER:
      tok = jj_consume_token(TCARACTER);
        retorno.setValor(tok.image);
        {if (true) return retorno;}
      break;
    default:
      jj_la1[13] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo Asig() throws ParseException {
             nodo e1; Token tok;
    tok = jj_consume_token(IDENTIFICADOR);
    jj_consume_token(29);
    e1 = EA1();
        nodo aux = new nodo();
        aux.setEtiqueta("ASIG");

        nodo aux2 = new nodo();
        aux2.setEtiqueta("IDENTIFICADOR");
        aux2.setValor(tok.image);
        aux.AddHijos(aux2);
        aux.AddHijos("=");
        aux.AddHijos(e1);

        {if (true) return aux;}
    throw new Error("Missing return statement in function");
  }

  final public nodo F() throws ParseException {
          nodo e1 = new nodo(); e1.setEtiqueta("F"); Token tok;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case CADENA:
      tok = jj_consume_token(CADENA);
        String aux = tok.image;
        aux = aux.replaceAll("\u005c"","");
        e1.AddHijos("CADENA",aux);
        {if (true) return e1;}
      break;
    case ENTERO:
      tok = jj_consume_token(ENTERO);
        e1.AddHijos("ENTERO",tok.image);
        {if (true) return e1;}
      break;
    case DECIMAL:
      tok = jj_consume_token(DECIMAL);
        e1.AddHijos("DECIMAL",tok.image);
        {if (true) return e1;}
      break;
    case CARACTER:
      tok = jj_consume_token(CARACTER);
        e1.AddHijos("CARACTER",tok.image);
        {if (true) return e1;}
      break;
    case IDENTIFICADOR:
      tok = jj_consume_token(IDENTIFICADOR);
        e1.AddHijos("IDENTIFICADOR",tok.image);
        {if (true) return e1;}
      break;
    case 33:
      jj_consume_token(33);
      e1 = EA1();
      jj_consume_token(34);
        {if (true) return e1;}
      break;
    default:
      jj_la1[14] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo Ambito() throws ParseException {
                 Token e1; Token e2; Token e3;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case PUBLICO:
      e1 = jj_consume_token(PUBLICO);
        nodo nodo1 = new nodo();
        nodo1.setEtiqueta("AMBITO");
        nodo1.setValor(e1.image);
        nodo1.setColumna(e1.beginColumn);
        nodo1.setLinea(e1.beginLine);
        {if (true) return nodo1;}
      break;
    case PRIVADO:
      e2 = jj_consume_token(PRIVADO);
        nodo nodo2 = new nodo();
        nodo2.setEtiqueta("AMBITO");
        nodo2.setValor(e2.image);
        nodo2.setColumna(e2.beginColumn);
        nodo2.setLinea(e2.beginLine);
        {if (true) return nodo2;}
      break;
    case PROTEGIDO:
      e3 = jj_consume_token(PROTEGIDO);
        nodo nodo3 = new nodo();
        nodo3.setEtiqueta("AMBITO");
        nodo3.setValor(e3.image);
        nodo3.setColumna(e3.beginColumn);
        nodo3.setLinea(e3.beginLine);
        {if (true) return nodo3;}
      break;
    default:
      jj_la1[15] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public nodo ListaIds() throws ParseException {
                  Token tok; nodo n1 = new nodo(); n1.setEtiqueta("ListaIds"); Token tok2;
    tok2 = jj_consume_token(IDENTIFICADOR);
                          nodo n2 = new nodo(); n2.setValor(tok2.image);n2.setEtiqueta("IDENTIFICADOR");n1.AddHijos(n2);
    label_5:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 32:
        ;
        break;
      default:
        jj_la1[16] = jj_gen;
        break label_5;
      }
      jj_consume_token(32);
      tok = jj_consume_token(IDENTIFICADOR);
        nodo nuevo = new nodo();
        nuevo.setValor(tok.image);
        nuevo.setEtiqueta("IDENTIFICADOR");
        n1.AddHijos(nuevo);
    }
     {if (true) return n1;}
    throw new Error("Missing return statement in function");
  }

//EXPRESIONES ARITMETICAS
  final public nodo EA1() throws ParseException {
              nodo e1; nodo e2; nodo retorno;
    e1 = EA2();
    label_6:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 35:
      case 36:
        ;
        break;
      default:
        jj_la1[17] = jj_gen;
        break label_6;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 35:
        jj_consume_token(35);
        e2 = EA2();
            nodo n1 = new nodo();
            n1.setEtiqueta("EA1");
            nodo izq = (nodo) e1;
            nodo der = (nodo) e2;
            n1.AddHijos(izq);
            n1.AddHijos("+");
            n1.AddHijos(der);
            e1= (nodo) n1;
        break;
      case 36:
        jj_consume_token(36);
        e2 = EA2();
            nodo n2 = new nodo();
            n2.setEtiqueta("EA1");
            nodo izq1 = (nodo) e1;
            nodo der1 = (nodo) e2;
            n2.AddHijos(izq1);
            n2.AddHijos("-");
            n2.AddHijos(der1);
            e1= (nodo) n2;
        break;
      default:
        jj_la1[18] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
            retorno = new nodo(); retorno.setEtiqueta("EA1");retorno.AddHijos(e1);{if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo EA3() throws ParseException {
            nodo e1; nodo e2; nodo retorno;
    e1 = F();
    label_7:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 37:
        ;
        break;
      default:
        jj_la1[19] = jj_gen;
        break label_7;
      }
      jj_consume_token(37);
      e2 = F();
        nodo n1 = new nodo();
        n1.setEtiqueta("EA3");
        n1.AddHijos((nodo)e1);
        n1.AddHijos("^");
        n1.AddHijos((nodo)e2);
        e1 = (nodo)n1;
    }
        retorno = new nodo(); retorno.setEtiqueta("EA3"); retorno.AddHijos(e1);{if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo EA2() throws ParseException {
            nodo e1; nodo e2; nodo retorno;
    e1 = EA3();
    label_8:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 38:
      case 39:
        ;
        break;
      default:
        jj_la1[20] = jj_gen;
        break label_8;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 38:
        jj_consume_token(38);
        e2 = EA3();
            nodo n1 = new nodo();
            n1.setEtiqueta("EA2");
            nodo izq = (nodo) e1;
            nodo der = (nodo) e2;
            n1.AddHijos(izq);
            n1.AddHijos("*");
            n1.AddHijos(der);
            e1= (nodo) n1;
        break;
      case 39:
        jj_consume_token(39);
        e2 = EA3();
            nodo n2 = new nodo();
            n2.setEtiqueta("EA2");
            nodo izq1 = (nodo) e1;
            nodo der1 = (nodo) e2;
            n2.AddHijos(izq1);
            n2.AddHijos("/");
            n2.AddHijos(der1);
            e1= (nodo) n2;
        break;
      default:
        jj_la1[21] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
         retorno = e1; retorno.setEtiqueta("EA2");{if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

//EXPRESIONES RELACIONALES
  final public nodo ER1() throws ParseException {
             nodo e1; nodo e2;
    e1 = EA1();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 40:
        jj_consume_token(40);
        e2 = EA1();
        nodo nuevo = new nodo();
        nuevo.setEtiqueta("ER1");
        nuevo.AddHijos((nodo)e1);
        nuevo.AddHijos("==");
        nuevo.AddHijos((nodo)e2);
        e1 = (nodo)nuevo;
        break;
      case 41:
        jj_consume_token(41);
        e2 = EA1();
        nodo nuevo2 = new nodo();
        nuevo2.setEtiqueta("ER1");
        nuevo2.AddHijos((nodo)e1);
        nuevo2.AddHijos("<");
        nuevo2.AddHijos((nodo)e2);
        e1 = (nodo)nuevo2;
        break;
      case 42:
        jj_consume_token(42);
        e2 = EA1();
        nodo nuevo3 = new nodo();
        nuevo3.setEtiqueta("ER1");
        nuevo3.AddHijos((nodo)e1);
        nuevo3.AddHijos("<=");
        nuevo3.AddHijos((nodo)e2);
        e1 = (nodo)nuevo3;
        break;
      case 43:
        jj_consume_token(43);
        e2 = EA1();
        nodo nuevo4 = new nodo();
        nuevo4.setEtiqueta("ER1");
        nuevo4.AddHijos((nodo)e1);
        nuevo4.AddHijos(">");
        nuevo4.AddHijos((nodo)e2);
        e1 = (nodo)nuevo4;
        break;
      case 44:
        jj_consume_token(44);
        e2 = EA1();
        nodo nuevo5 = new nodo();
        nuevo5.setEtiqueta("ER1");
        nuevo5.AddHijos((nodo)e1);
        nuevo5.AddHijos(">=");
        nuevo5.AddHijos((nodo)e2);
        e1 = (nodo)nuevo5;
        break;
      case 45:
        jj_consume_token(45);
        e2 = EA1();
        nodo nuevo6 = new nodo();
        nuevo6.setEtiqueta("ER1");
        nuevo6.AddHijos((nodo)e1);
        nuevo6.AddHijos("!=");
        nuevo6.AddHijos((nodo)e2);
        e1 = (nodo)nuevo6;
        break;
      case 46:
        jj_consume_token(46);
        e2 = EA1();
        nodo nuevo7 = new nodo();
        nuevo7.setEtiqueta("ER1");
        nuevo7.AddHijos((nodo)e1);
        nuevo7.AddHijos("!&\u00a1");
        nuevo7.AddHijos((nodo)e2);
        e1 = (nodo)nuevo7;
        break;
      default:
        jj_la1[22] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      break;
    default:
      jj_la1[23] = jj_gen;
      ;
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

//EXPRESIONES LOGICAS
  final public nodo EL1() throws ParseException {
            nodo e1,e2;
    e1 = EL2();
    label_9:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 47:
      case 48:
      case 49:
        ;
        break;
      default:
        jj_la1[24] = jj_gen;
        break label_9;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 47:
        jj_consume_token(47);
        e2 = EL2();
        nodo nuevo = new nodo();
        nuevo.setEtiqueta("EL1");
        nuevo.AddHijos((nodo)e1);
        nuevo.AddHijos("||");
        nuevo.AddHijos((nodo)e2);
        e1 = (nodo)nuevo;
        break;
      case 48:
        jj_consume_token(48);
        e2 = EL2();
        nodo nuevo2 = new nodo();
        nuevo2.setEtiqueta("EL1");
        nuevo2.AddHijos(e1);
        nuevo2.AddHijos("!||");
        nuevo2.AddHijos(e2);
        e1 = (nodo)nuevo2;
        break;
      case 49:
        jj_consume_token(49);
        e2 = EL2();
        nodo nuevo3 = new nodo();
        nuevo3.setEtiqueta("EL1");
        nuevo3.AddHijos(e1);
        nuevo3.AddHijos("&|");
        nuevo3.AddHijos(e2);
        e1 = (nodo)nuevo3;
        break;
      default:
        jj_la1[25] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public nodo EL2() throws ParseException {
             nodo e1,e2;
    e1 = ER1();
    label_10:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 50:
      case 51:
        ;
        break;
      default:
        jj_la1[26] = jj_gen;
        break label_10;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 50:
        jj_consume_token(50);
        e2 = ER1();
        nodo nuevo = new nodo();
        nuevo.setEtiqueta("EL2");
        nuevo.AddHijos(e1);
        nuevo.AddHijos("&&");
        nuevo.AddHijos(e2);
        e1 = (nodo)nuevo;
        break;
      case 51:
        jj_consume_token(51);
        e2 = ER1();
        nodo nuevo1 = new nodo();
        nuevo1.setEtiqueta("EL2");
        nuevo1.AddHijos(e1);
        nuevo1.AddHijos("!&&");
        nuevo1.AddHijos(e2);
        e1 = (nodo)nuevo1;
        break;
      default:
        jj_la1[27] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

//FUNCIONES Y PROCEDIMIENTOS

    //FUNCIONES
  final public nodo Funcion() throws ParseException {
                nodo e1 = new nodo();e1.setEtiqueta("FUNCION");nodo e2; Token tok, tok2;
    //FUNCION CONSERVAR
        e2 = Tipo();
    tok = jj_consume_token(IDENTIFICADOR);
                          e1.AddHijos(e2); nodo aux = new nodo(); aux.setValor(tok.image); aux.setEtiqueta("IDENTIFICADOR");e1.AddHijos(aux);
    jj_consume_token(33);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TENTERO:
    case TCADENA:
    case TBOOLEAN:
    case TDOBLE:
    case TCARACTER:
      e2 = ListaParam();
                          e1.AddHijos("(");e1.AddHijos(e2); e1.AddHijos(")");
      break;
    default:
      jj_la1[28] = jj_gen;
      ;
    }
    jj_consume_token(34);
    tok = jj_consume_token(ABRE);
    e2 = ListaSentencias();
    tok2 = jj_consume_token(CIERRE);
                                                        e1.AddHijos(tok.image);e1.AddHijos(e2);e1.AddHijos(tok2.image); {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public nodo Procedimiento() throws ParseException {
                        nodo e1,retorno,e2; retorno = new nodo(); retorno.setEtiqueta("PROCEDIMIENTO"); Token tok, tok2;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case VOID:
      tok = jj_consume_token(VOID);
                  retorno.AddHijos(tok.image);
      break;
    default:
      jj_la1[29] = jj_gen;
      ;
    }
    tok = jj_consume_token(IDENTIFICADOR);
        nodo aux = new nodo();
        aux.setEtiqueta("IDENTIFICADOR");
        aux.setValor(tok.image);
        retorno.AddHijos(aux);
    jj_consume_token(33);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TENTERO:
    case TCADENA:
    case TBOOLEAN:
    case TDOBLE:
    case TCARACTER:
      e1 = ListaParam();
                            retorno.AddHijos("(");retorno.AddHijos(e1); retorno.AddHijos(")");
      break;
    default:
      jj_la1[30] = jj_gen;
      ;
    }
    jj_consume_token(34);
    tok = jj_consume_token(ABRE);
    e1 = ListaSentencias();
    tok2 = jj_consume_token(CIERRE);
        retorno.AddHijos(tok.image);
        retorno.AddHijos(e1);
        retorno.AddHijos(tok2.image);
     {if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  final public nodo ListaParam() throws ParseException {
                   nodo e1, e2; Token tok, tok2; nodo retorno = new nodo(); retorno.setEtiqueta("LISTAPARAM");
    e1 = Tipo();
    tok = jj_consume_token(IDENTIFICADOR);
        nodo aux = new nodo();
        aux.setEtiqueta("PARAM");
        aux.AddHijos(e1);
        nodo aux2 = new nodo();
        aux2.setValor(tok.image);
        aux2.setEtiqueta("IDENTIFICADOR");
        aux.AddHijos(aux2);
        retorno.AddHijos(aux);
    label_11:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 32:
        ;
        break;
      default:
        jj_la1[31] = jj_gen;
        break label_11;
      }
      jj_consume_token(32);
      e2 = Tipo();
      tok2 = jj_consume_token(IDENTIFICADOR);
        nodo aux3 = new nodo();
        aux3.setEtiqueta("PARAM");
        aux3.AddHijos(e2);
        nodo aux4 = new nodo();
        aux4.setValor(tok2.image);
        aux4.setEtiqueta("IDENTIFICADOR");
        aux3.AddHijos(aux4);
        retorno.AddHijos(aux3);
    }
     {if (true) return retorno;}
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_3R_12() {
    if (jj_scan_token(CONSERVAR)) return true;
    return false;
  }

  private boolean jj_3R_17() {
    if (jj_3R_19()) return true;
    if (jj_scan_token(IDENTIFICADOR)) return true;
    return false;
  }

  private boolean jj_3R_21() {
    if (jj_scan_token(TENTERO)) return true;
    return false;
  }

  private boolean jj_3R_19() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_21()) {
    jj_scanpos = xsp;
    if (jj_3R_22()) {
    jj_scanpos = xsp;
    if (jj_3R_23()) {
    jj_scanpos = xsp;
    if (jj_3R_24()) {
    jj_scanpos = xsp;
    if (jj_3R_25()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_15() {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_25() {
    if (jj_scan_token(TCARACTER)) return true;
    return false;
  }

  private boolean jj_3R_14() {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_24() {
    if (jj_scan_token(TDOBLE)) return true;
    return false;
  }

  private boolean jj_3R_13() {
    if (jj_3R_16()) return true;
    return false;
  }

  private boolean jj_3R_20() {
    if (jj_scan_token(VOID)) return true;
    return false;
  }

  private boolean jj_3_1() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_12()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3R_13()) {
    jj_scanpos = xsp;
    if (jj_3R_14()) {
    jj_scanpos = xsp;
    if (jj_3R_15()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_23() {
    if (jj_scan_token(TBOOLEAN)) return true;
    return false;
  }

  private boolean jj_3R_18() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_20()) jj_scanpos = xsp;
    if (jj_scan_token(IDENTIFICADOR)) return true;
    if (jj_scan_token(33)) return true;
    return false;
  }

  private boolean jj_3R_16() {
    if (jj_scan_token(VAR)) return true;
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3R_22() {
    if (jj_scan_token(TCADENA)) return true;
    return false;
  }

  /** Generated Token Manager. */
  public Analizador_LienzoTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[32];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0xe400,0x11000,0x3fe0000,0x800000,0x37e0000,0x2000000,0x8000000,0x20000000,0x28000000,0x28000000,0x0,0x0,0x420003c0,0x7c0000,0x20003c0,0xe000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7c0000,0x1000000,0x7c0000,0x0,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x2,0x0,0x2,0x0,0x1,0x18,0x18,0x20,0xc0,0xc0,0x7f00,0x7f00,0x38000,0x38000,0xc0000,0xc0000,0x0,0x0,0x0,0x1,};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[1];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public Analizador_Lienzo(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Analizador_Lienzo(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new Analizador_LienzoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public Analizador_Lienzo(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new Analizador_LienzoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public Analizador_Lienzo(Analizador_LienzoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(Analizador_LienzoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 32; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      boolean exists = false;
      for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        exists = true;
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              exists = false;
              break;
            }
          }
          if (exists) break;
        }
      }
      if (!exists) jj_expentries.add(jj_expentry);
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[52];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 32; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 52; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 1; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
